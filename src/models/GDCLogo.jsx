/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 GDCLogo.gltf 
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/models/GDCLogo/GDCLogo.gltf')
  const groupRef = useRef()

  const [rotateForward, setRotateForward] = useState(false);

  // Rotates back and forth showing only the front side
  useFrame(() => {
    if (rotateForward) {
      groupRef.current.rotation.y += 0.0025;

      if (groupRef.current.rotation.y >= Math.PI / 4) {
        // Reached 45 degrees, switch rotation direction
        setRotateForward(false);
      }
    } else {
      groupRef.current.rotation.y -= 0.0025; // Adjust the rotation speed here
      if (groupRef.current.rotation.y <= -Math.PI / 4) {
        // Reached 0 degrees, switch rotation direction
        setRotateForward(true);
      }
    }
  })

  return (
    <group {...props} dispose={null} ref={groupRef}>
      <mesh geometry={nodes.Curve001.geometry} material={materials['SVGMat.004']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve003.geometry} material={materials['SVGMat.006']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve005.geometry} material={materials['SVGMat.008']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve006.geometry} material={materials['SVGMat.009']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve007.geometry} material={materials['SVGMat.010']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve008.geometry} material={materials['SVGMat.011']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve009.geometry} material={materials['SVGMat.012']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve010.geometry} material={materials['SVGMat.013']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve011.geometry} material={materials['SVGMat.014']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve012.geometry} material={materials['SVGMat.015']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve013.geometry} material={materials['SVGMat.016']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve014.geometry} material={materials['SVGMat.017']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve015.geometry} material={materials['SVGMat.018']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve016.geometry} material={materials['SVGMat.019']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve017.geometry} material={materials['SVGMat.020']} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Curve018.geometry} material={materials['SVGMat.021']} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/models/GDCLogo/GDCLogo.gltf')
